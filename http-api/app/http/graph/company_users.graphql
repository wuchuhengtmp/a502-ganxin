#公司人员
""" 角色 """
enum CreateInputUserRole {
    """ 仓库管理员 """
    repositoryAdmin
    """ 项目管理员 """
    projectAdmin
    """ 维修管理员 """
    maintenanceAdmin
}
""" 角色信息 """
type RoleItem {
    id: Int!
    name: String!
    tag: Role!
}
""" 用户信息 """
type UserItem {
    id: Int!
    role: RoleItem!
    name: String!
    phone: String!
    wechat: String!
    avatar: FileItem!
    isAble: Boolean!
    company: CompanyItem!
}
""" 添加用户信息需要的信息 """
input CreateCompanyUserInput {
    name: String!
    phone: String!
    role: CreateInputUserRole!
    wechat: String!
    avatarId: Int!
    password: String!
}
""" 编辑公司人员需要的数据 """
input EditCompanyUserInput {
    id: Int!
    name: String!
    phone: String!
    roleId: Int!
    """" 是否启用 """
    isAble: Boolean!
}

extend type Mutation {
    """ 添加公司人员管理 (auth: companyAdmin) """
    createCompanyUser(input: CreateCompanyUserInput!): UserItem! @hasRole(role: [companyAdmin])
    """ 编辑公司人员 (auth: companyAdmin) """
    editCompanyUser(input: EditCompanyUserInput): UserItem! @hasRole(role: [companyAdmin])
    """ 删除公司人员 (auth: companyAdmin) """
    deleteCompanyUser(uid: Int!): Boolean! @hasRole(role: [companyAdmin])
}

extend type Query {
    """ 获取公司人员 (aunth: companyAdmin, repositoryAdmin, projectAdmin, maintenanceAdmin) """
    getCompanyUser: [UserItem]! @hasRole(role: [companyAdmin, repositoryAdmin, projectAdmin, maintenanceAdmin])
}
